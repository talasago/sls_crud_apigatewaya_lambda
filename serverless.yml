# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
service: sls-sds-crud

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '1'

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: ap-northeast-1
  role: ${file(./config/role.yml)}

custom:
  environment:
    cluster_arn: ${file(./config/env.yml):cluster_arn}
    secret_arn: ${file(./config/env.yml):secret_arn}
    database_name: ${file(./config/env.yml):database_name}
    schema_name: ${file(./config/env.yml):schema_name}

package:
  exclude:
    - config/**
    - testdata*.json

functions:
  get:
    handler: get.read
    events:
      - http:
          path: /
          method: get
    layers:
      - { Ref: CommonLambdaLayer }
    environment:
      CLUSTER_ARN: ${self:custom.environment.cluster_arn}
      SECRET_ARN: ${self:custom.environment.secret_arn}
      DATABASE_NAME: ${self:custom.environment.database_name}
      SCHEMA_NAME: ${self:custom.environment.schema_name}

  post:
    handler: post.create
    events:
      - http:
          path: /
          method: post
    layers:
      - { Ref: CommonLambdaLayer }
    environment:
      CLUSTER_ARN: ${self:custom.environment.cluster_arn}
      SECRET_ARN: ${self:custom.environment.secret_arn}
      DATABASE_NAME: ${self:custom.environment.database_name}
      SCHEMA_NAME: ${self:custom.environment.schema_name}

  delete:
    handler: delete.delete
    events:
      - http:
          path: /
          method: delete
    response:
      statusCodes: 200
      application/json: Empty

  put:
    handler: ut.update
    events:
      - http:
          path: /
          method: put
layers:
  common:
    path: layers


#resources:
#  Resources:
#    iamRole:
#      Type: AWS:IAM:Role